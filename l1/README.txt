TO RUN THE ALGORITHM, ONE CAN TYPE THE COMMAND,
python /path/to/file main.py

In case of error, “Invalid list format”, open input.txt file in the corresponding folder and remove the last (empty) line from the text and save it. 

The output for given input is as follows:

Astar:
exploredNodes =  [[0, 4], [0, 3], [1, 4], [2, 4], [2, 3]]
searchQueue=[
             [[0, 3], [1, 4]]
             [[1, 4], [0, 2]]
             [[2, 4], [0, 2]]
             [[2, 3], [0, 2], [3, 4]]
             [[0, 2], [3, 4]]
            ]
ShortestPath= [[0, 4], [1, 4], [2, 4], [2, 3]]

=======================================================================================
=======================================================================================

BestFirstSearch:
exploredNodes =  [[0, 4], [1, 4], [2, 4], [2, 3]]
searchQueue=[
             [[1, 4], [0, 3]]
             [[2, 4], [0, 3]]
             [[2, 3], [0, 3], [3, 4]]
             [[3, 4], [0, 3]]
            ]
ShortestPath= [[0, 4], [1, 4], [2, 4], [2, 3]]

=======================================================================================
=======================================================================================

BFS:

exploredNodes =  [[0, 4], [0, 3], [1, 4], [0, 2], [2, 4], [0, 1], [1, 2], [2, 3]]
searchQueue=[
             [[0, 3], [1, 4]]
             [[1, 4], [0, 2]]
             [[0, 2], [2, 4]]
             [[2, 4], [0, 1], [1, 2]]
             [[0, 1], [1, 2], [2, 3], [3, 4]]
             [[1, 2], [2, 3], [3, 4], [1, 1]]
             [[2, 3], [3, 4], [1, 1]]
             [[3, 4], [1, 1]]
            ]
ShortestPath= [[0, 4], [1, 4], [2, 4], [2, 3]]

=======================================================================================
=======================================================================================

DFS:
exploredNodes =  [[4, 0], [4, 1], [4, 2], [4, 3], [3, 3], [3, 4], [2, 4], [1, 4], [2, 3]]
searchQueue=[
             [[3, 0], [4, 1]]
             [[3, 0], [3, 1], [4, 2]]
             [[3, 0], [3, 1], [4, 3]]
             [[3, 0], [3, 1], [3, 3]]
             [[3, 0], [3, 1], [2, 3], [3, 4]]
             [[3, 0], [3, 1], [2, 3], [2, 4]]
             [[3, 0], [3, 1], [2, 3], [1, 4]]
             [[3, 0], [3, 1], [2, 3]]
             [[3, 0], [3, 1]]
            ]
ShortestPath= [[4, 0], [4, 1], [4, 2], [4, 3], [3, 3], [2, 3]]


=======================================================================================
=======================================================================================

IDAstar:
exploredNodes =  [[0, 4], [1, 4], [2, 4], [2, 3]]
searchQueue=[
             [[0, 3], [1, 4]]
             [[0, 3], [2, 4]]
             [[0, 3], [2, 3]]
             [[0, 3]]
            ]
ShortestPath= [[0, 4], [1, 4], [2, 4], [2, 3]]


================================THE END==================================

